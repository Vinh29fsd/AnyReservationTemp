@page "/products"
@using Microsoft.EntityFrameworkCore
@using AnyReservationTemp.Domain
@using AnyReservationTemp.Data
@implements IAsyncDisposable
@inject IDbContextFactory<AnyReservationTempContext> DbFactory
@inject NavigationManager NavManager

<PageTitle>Products</PageTitle>

<!-- Filler -->
<div class="container-fluid d-flex flex-wrap w-100 py-2">
    <a style="color: #fff3f1;" class="btn px-4 py-2 m-2 rounded-pill" href="#">Space</a>
</div>

<!-- Filler -->
<div class="container-fluid d-flex flex-wrap w-100 py-2">
    <a style="color: #fff3f1;" class="btn px-4 py-2 m-2 rounded-pill" href="#">Space</a>
</div>

<body style="background-color: #fff3f1;">
    <h1 class="text-center">Available Products for @restaurantName</h1>

    <hr>

    @foreach (var categoryGroup in Products.GroupBy(p => p.ProductCategoryId))
    {
        var category = Category.FirstOrDefault(c => c.Id == categoryGroup.Key);
        if (category != null)
        {
            <div class="row">
                <div class="category-container">
                    <h3 class="text-center fw-bold">@category.Category</h3>
                    <div class="product-container">
                        @foreach (var product in categoryGroup)
                        {
                            <div class="product-card">
                                <h4>@product.Name</h4>
                                <p>Category: @category.Category</p>
                                <p>Cost: $@product.Cost</p>
                                <p>Quantity: @product.Quantity</p>

                                @if (product.Quantity == 0)
                                {
                                    <button type="button" class="btn btn-danger" disabled>Sold Out</button>
                                }
                                else
                                {
                                    <!-- Button to Open Modal (Unique ID) -->
                                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#orderModal_@product.Id">
                                        Order Now
                                    </button>
                                }
                            </div>

                            @if (product.Quantity > 0)
                            {
                                <!-- Modal (Unique ID for Each Product) -->
                                <div class="modal fade" id="orderModal_@product.Id" aria-labelledby="orderModalLabel_@product.Id" aria-hidden="true">
                                    <div class="modal-dialog modal-lg">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="orderModalLabel_@product.Id">Order - @product.Name</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                <!-- Embedded Webpage for Ordering -->
                                                <iframe src="@($"/orderdetails/create?orderId={OrderId}&productId={product.Id}")" style="width: 300px; height: 300px; border: none;"></iframe>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="location.reload();">Close</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                </div>
            </div>
        }
    }


    <a href="/orders/edit?id=@OrderId&restaurantId=@restaurantId" class="checkout-btn btn btn-success ">Checkout</a>
</body>

@code {
    [SupplyParameterFromQuery]
    private int OrderId { get; set; }

    [SupplyParameterFromQuery]
    private int restaurantId { get; set; }

    private string restaurantName { get; set; }

    private AnyReservationTempContext context = default!;
    private List<Product> Products { get; set; } = new();
    private List<ProductCategory> Category { get; set; } = new();

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
        Category = context.ProductCategory.ToList();

        restaurantName = context.Restaurant.FirstOrDefault(n => n.Id == restaurantId).Name;

        var productIdsForRestaurant = context.RestaurantProductCategory
            .Where(rp => rp.RestaurantId == restaurantId)
            .Select(rp => rp.ProductId)
            .ToList();

        Products = context.Product
            .Where(p => productIdsForRestaurant.Contains(p.Id))
            .ToList();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
