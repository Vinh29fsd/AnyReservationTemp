@page "/restauranttypes/details"
@using Microsoft.EntityFrameworkCore
@using AnyReservationTemp.Domain
@inject IDbContextFactory<AnyReservationTemp.Data.AnyReservationTempContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>RestaurantType</h2>
    <hr />
    @if (restauranttype is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Type</dt>
            <dd class="col-sm-10">@restauranttype.Type</dd>
            <dt class="col-sm-2">RestaurantId</dt>
            <dd class="col-sm-10">@restauranttype.RestaurantId</dd>
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@restauranttype.Name</dd>
            <dt class="col-sm-2">Contact</dt>
            <dd class="col-sm-10">@restauranttype.Contact</dd>
            <dt class="col-sm-2">EmailAddress</dt>
            <dd class="col-sm-10">@restauranttype.EmailAddress</dd>
        </dl>
        <div>
            <a href="@($"/restauranttypes/edit?id={restauranttype.Id}")">Edit</a> |
            <a href="@($"/restauranttypes")">Back to List</a>
        </div>
    }
</div>

@code {
    private RestaurantType? restauranttype;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        restauranttype = await context.RestaurantType.FirstOrDefaultAsync(m => m.Id == Id);

        if (restauranttype is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
