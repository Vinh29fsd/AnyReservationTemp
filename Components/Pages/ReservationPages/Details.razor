@page "/reservations/details"
@using AnyReservationTemp.Data
@using Microsoft.EntityFrameworkCore
@using AnyReservationTemp.Domain
@inject IDbContextFactory<AnyReservationTemp.Data.AnyReservationTempContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>
<!-- Filler -->
<div class="container-fluid d-flex flex-wrap w-100 py-2">
    <a style="color: #fff3f1;" class="btn px-4 py-2 m-2 rounded-pill" href="#">Space</a>
</div>

<body style="background: #fff3f1;">
    <div class="container mt-5">
        <div class="row justify-content-between mb-4">
            <div class="col-auto">
                <a href="@($"/reservations")" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Back to List
                </a>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="col-md-8">
                <h2 class="text-center">Review Your Reservations</h2>
                <hr />

                @if (reservation is null)
                {
                    <p><em>Loading...</em></p>
                }
                else
                {
                    <dl class="row">
                        <dt class="col-sm-6 text-end">Name:</dt>
                        <dd class="col-sm-6">@reservation.Name</dd>
                        <dt class="col-sm-6 text-end">Contact:</dt>
                        <dd class="col-sm-6">@reservation.Contact</dd>
                        <dt class="col-sm-6 text-end">Email Address:</dt>
                        <dd class="col-sm-6">@reservation.EmailAddress</dd>
                        <dt class="col-sm-6 text-end">Number of Guests:</dt>
                        <dd class="col-sm-6">@reservation.NumOfCustomer</dd>
                        <dt class="col-sm-6 text-end">Restaurant:</dt>
                        <dd class="col-sm-6">@Restaurants.FirstOrDefault(r => r.Id == reservation.RestaurantId)?.Name</dd>
                        <dt class="col-sm-6 text-end">Date Reserved:</dt>
                        <dd class="col-sm-6">@reservation.DateReserved.ToString("MM/dd/yyyy")</dd>
                        <dt class="col-sm-6 text-end">Start Time:</dt>
                        <dd class="col-sm-6">@reservation.StartTime.ToString("HH:mm")</dd>
                        <dt class="col-sm-6 text-end">End Time:</dt>
                        <dd class="col-sm-6">@reservation.EndTime.ToString("HH:mm")</dd>
                        <dt class="col-sm-6 text-end">Status:</dt>
                        <dd class="col-sm-6">@ProgressStatuses.FirstOrDefault(p => p.Id == reservation.ProgressId)?.Description</dd>
                        <div hidden>
                            <dt class="col-sm-6">CustomerId</dt>
                            <dd class="col-sm-6">@reservation.CustomerId</dd>
                            <dt class="col-sm-6">Table No</dt>
                            <dd class="col-sm-6">@reservation.TableNo</dd>
                            <dt class="col-sm-6">Date Created</dt>
                            <dd class="col-sm-6">@reservation.DateCreated</dd>
                            <dt class="col-sm-6">Date Updated</dt>
                            <dd class="col-sm-6">@reservation.DateUpdated</dd>
                            <dt class="col-sm-6">Created By</dt>
                            <dd class="col-sm-6">@reservation.CreatedBy</dd>
                            <dt class="col-sm-6">Updated By</dt>
                            <dd class="col-sm-6">@reservation.UpdatedBy</dd>
                        </div>
                    </dl>
                    <hr>
                    <div class="text-center mb-4">
                        <!-- Temporary Food Order Modal -->
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#orderModal">
                            Pre-Order your food?
                        </button>

                        <!-- Modal Structure -->
                        <div class="modal fade" id="orderModal" tabindex="-1" aria-labelledby="orderModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-lg">
                                <div style="background: #fff3f1"class="modal-content">
                                    <div style="background-color: #f9bfbf" class="modal-header">
                                        <h5 class="modal-title" id="orderModalLabel">Order</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <!-- Embed Webpage with ReservationId as Query Parameter -->
                                        <iframe src="@($"/orderdetails/create?reservationId={reservation.Id}")" style="width: 100%; height: 600px; border: none;"></iframe>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary bg-danger" data-bs-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="text-center">
                        <a href="@($"/reservations/edit?id={reservation.Id}")" class="btn btn-warning">Edit Reservation</a>
                    </div>
                }
            </div>
        </div>
    </div>
</body>

<!-- Include Bootstrap CSS and JS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

@code {
    private Reservation? reservation;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    private AnyReservationTempContext context = default!;
    private IQueryable<Restaurant> Restaurants => context.Restaurant;
    private IQueryable<Status> ProgressStatuses => context.Status;

    protected override async Task OnInitializedAsync()
    {
        context = DbFactory.CreateDbContext();
        reservation = await context.Reservation.FirstOrDefaultAsync(m => m.Id == Id);

        if (reservation is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
