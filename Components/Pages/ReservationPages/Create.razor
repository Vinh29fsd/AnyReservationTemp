@page "/reservations/create"
@using AnyReservationTemp.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using AnyReservationTemp.Domain
@inject IDbContextFactory<AnyReservationTemp.Data.AnyReservationTempContext> DbFactory
@inject NavigationManager NavigationManager
@inject SignInManager<AnyReservationTempUser> SignInManager

<PageTitle>Create</PageTitle>

<!-- Filler -->
<div class="container-fluid d-flex flex-wrap w-100 py-2">
    <a class="btn px-4 py-2 m-2 rounded-pill" href="#">Space</a>
</div>
<body style="background-color: #fff3f1">
    <h1>Create</h1>
    <h2>Reservation</h2>
    <hr />
    <div>
        @if (AuthCheck)
        {
            <div class="row d-flex justify-content-center align-items-center">
                <div class="col-md-4">
                    <div class="row d-flex justify-content-center align-items-center mb-4">
                        <div class="col-12 text-center">
                            <button class="px-4 py-2 rounded w-auto text-center"
                                    style="font-size: 1.5rem; color: black; background: #ff3535; font-family: 'Brush Script MT'; border: transparent;"
                                    onclick="location.href='/'">
                                AnyReservation
                            </button>
                        </div>
                    </div>
                    <EditForm method="post" Model="Reservation" OnValidSubmit="AddReservation" FormName="create" Enhance>
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger" role="alert" />
                        <div class="mb-3">
                            <label for="restaurantid" class="form-label">RestaurantId:</label>
                            <InputNumber id="restaurantid" @bind-Value="Reservation.RestaurantId" class="form-control" />
                            <ValidationMessage For="() => Reservation.RestaurantId" class="text-danger" />
                        </div>
                        <div>
                            <!-- Temporary Food Order Modal -->
                            <button class="btn btn-primary bg-success w-100">Food Order Modal</button>
                        </div>
                        <div class="mb-3">
                            <label for="name" class="form-label">Name:</label>
                            <InputText id="name" @bind-Value="Reservation.Name" class="form-control" />
                            <ValidationMessage For="() => Reservation.Name" class="text-danger" />
                        </div>
                        <div class="mb-3">
                            <label for="contact" class="form-label">Phone Number:</label>
                            <InputText id="contact" @bind-Value="Reservation.Contact" class="form-control" />
                            <ValidationMessage For="() => Reservation.Contact" class="text-danger" />
                        </div>
                        <div class="mb-3">
                            <label for="emailaddress" class="form-label">Email:</label>
                            <InputText id="emailaddress" @bind-Value="Reservation.EmailAddress" class="form-control" />
                            <ValidationMessage For="() => Reservation.EmailAddress" class="text-danger" />
                        </div>
                        <div class="mb-3">
                            <label for="numofcustomer" class="form-label">Number of Guests:</label>
                            <InputNumber id="numofcustomer" @bind-Value="Reservation.NumOfCustomer" class="form-control" />
                            <ValidationMessage For="() => Reservation.NumOfCustomer" class="text-danger" />
                        </div>
                        <div class="mb-3">
                            <label for="datereserved" class="form-label">Date of Reservation:</label>
                            <InputDate id="datereserved" @bind-Value="Reservation.DateReserved" class="form-control" />
                            <ValidationMessage For="() => Reservation.DateReserved" class="text-danger" />
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="starttime" class="form-label">From:</label>
                                    <InputDate Type="InputDateType.Time" id="starttime" @bind-Value="Reservation.StartTime" class="form-control" />
                                    <ValidationMessage For="() => Reservation.StartTime" class="text-danger" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="endtime" class="form-label">To:</label>
                                    <InputDate Type="InputDateType.Time" id="endtime" @bind-Value="Reservation.EndTime" class="form-control" />
                                    <ValidationMessage For="() => Reservation.EndTime" class="text-danger" />
                                </div>
                            </div>
                        </div>
                        <div class="mb-3" hidden>
                            <label for="customerid" class="form-label">CustomerId:</label>
                            <InputNumber id="customerid" @bind-Value="Reservation.CustomerId" class="form-control" />
                            <ValidationMessage For="() => Reservation.CustomerId" class="text-danger" />
                        </div>
                        <div class="mb-3" hidden>
                            <label for="tableno" class="form-label">TableNo:</label>
                            <InputNumber id="tableno" @bind-Value="Reservation.TableNo" class="form-control" />
                            <ValidationMessage For="() => Reservation.TableNo" class="text-danger" />
                        </div>
                        <div class="mb-3" hidden>
                            <label for="progressid" class="form-label">ProgressId:</label>
                            <InputNumber id="progressid" @bind-Value="Reservation.ProgressId" class="form-control" />
                            <ValidationMessage For="() => Reservation.ProgressId" class="text-danger" />
                        </div>
                        <div>
                            <button type="submit" class="btn btn-primary bg-success w-100">Reserve Now</button>
                        </div>
                    </EditForm>
                </div>
            </div>

        }
        else
        {
            <div class="row d-flex justify-content-center align-items-center">
                <div class="col-md-4">
                    <a href="Account/Login" class="btn btn-secondary bg-danger w-100">Sign In to Book</a>
                </div>
            </div>

        }
    </div>
</body>
@code {
    [SupplyParameterFromForm]
    private Reservation Reservation { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddReservation()
    {
        using var context = DbFactory.CreateDbContext();
        context.Reservation.Add(Reservation);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/reservations");
    }
}

@code {
    private bool AuthCheck;

    protected override async Task OnInitializedAsync()
    {
        AuthCheck = (await SignInManager.UserManager.GetUserAsync(SignInManager.Context.User)) != null;
    }
}
