@page "/orderdetails"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using AnyReservationTemp.Domain
@using AnyReservationTemp.Data
@using Microsoft.AspNetCore.Mvc


@implements IAsyncDisposable
@inject IDbContextFactory<AnyReservationTemp.Data.AnyReservationTempContext> DbFactory
@inject IEnumerable<Restaurant> RestaurantView

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="orderdetails/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.OrderDetail">
    <PropertyColumn Property="orderdetail => orderdetail.Quantity" />
    <PropertyColumn Property="orderdetail => orderdetail.TotalAmount" />
    <PropertyColumn Property="orderdetail => orderdetail.OrderId" />
    <PropertyColumn Property="orderdetail => orderdetail.ProductId" />
    <PropertyColumn Property="orderdetail => orderdetail.Name" />
    <PropertyColumn Property="orderdetail => orderdetail.Contact" />
    <PropertyColumn Property="orderdetail => orderdetail.EmailAddress" />

    <TemplateColumn Context="orderdetail">
        <a href="@($"orderdetails/edit?id={orderdetail.Id}")">Edit</a> |
        <a href="@($"orderdetails/details?id={orderdetail.Id}")">Details</a> |
        <a href="@($"orderdetails/delete?id={orderdetail.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private AnyReservationTempContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
    
    
}
